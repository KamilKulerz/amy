# Generated by Django 2.1.7 on 2019-07-21 18:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


def add_data_variants(apps, schema_editor):
    """Add new entries to the DataVariant model."""
    DataVariant = apps.get_model('extrequests', 'DataVariant')

    entries = [
        ("Tabular data - data organized in rows and columns, often stored as "
         "spreadsheet files (e.g. CSV, ODS, TSV, XLS)", False),
        ("Spatial data - data that can be mapped, includes data values and "
         "geographic coordinates (e.g. GeoTIFF, SHP, SHX)", False),
        ("Digital images (e.g. BMP, JPEG, PNG, TIFF) or videos (e.g. AVI, MOV, "
         "WAV)", False),
        ("Nucleotide sequences (e.g. FASTA, FASTQ, SAM)", False),
        ("Databases - tabular data organized into multiple cross-referenced "
         "tables (e.g. ACCDB, DB, MDB, SQL, SQLITE)", False),
        ("Unstructured text (e.g. HTML, TXT, XML)", False),
        ("Don't know yet", True),
    ]
    for name, unknown in entries:
        DataVariant.objects.create(name=name, unknown=unknown)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('workshops', '0188_WorkshopRequest_new_or_changed_fields'),
        ('extrequests', '0002_auto_20190130_0839'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Data variant name and description', max_length=300, unique=True, verbose_name='Name')),
                ('unknown', models.BooleanField(blank=True, default=False, help_text="Mark this record as 'I don't know yet', or 'Unknown', or 'Not sure yet'. There can be only one such record in the database.", verbose_name='Unknown entry')),
            ],
            options={
                'verbose_name': 'Data variant',
                'verbose_name_plural': 'Data variants',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SelfOrganizedSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('data_privacy_agreement', models.BooleanField(default=False, verbose_name='I have read and agree to <a href="https://docs.carpentries.org/topic_folders/policies/privacy.html", target="_blank">the data privacy policy</a> of The Carpentries.')),
                ('code_of_conduct_agreement', models.BooleanField(default=False, verbose_name='I agree to abide by The Carpentries\' <a target="_blank"href="https://docs.carpentries.org/topic_folders/policies/code-of-conduct.html">Code of Conduct</a>.')),
                ('host_responsibilities', models.BooleanField(default=False, verbose_name='I understand <a href="https://docs.carpentries.org/topic_folders/hosts_instructors/hosts_instructors_checklist.html#host-checklist">the responsibilities of the workshop host</a>,including recruiting local helpers to support the workshop (1 helper for every 8-10 learners).')),
                ('state', models.CharField(choices=[('p', 'Pending'), ('d', 'Discarded'), ('a', 'Accepted')], default='p', max_length=1)),
                ('personal', models.CharField(max_length=255, verbose_name='Personal (given) name')),
                ('family', models.CharField(blank=True, default='', max_length=255, verbose_name='Family name (surname)')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('institution_other_name', models.CharField(blank=True, default='', max_length=255, verbose_name='If your institutional affiliation is not listed, please enter the name')),
                ('institution_other_URL', models.URLField(blank=True, default='', help_text='Please provide URL.', max_length=255, verbose_name='If your institutional affiliation is not listed, please enter the website')),
                ('institution_department', models.CharField(blank=True, default='', max_length=255, verbose_name='Department/school affiliation (if applicable)')),
                ('workshop_url', models.URLField(help_text='Use the link to the website, not the repository. This is typically in the format <a>https://username.github.io/YYYY-MM-DD-sitename</a>.', max_length=255, verbose_name='Please share your workshop URL')),
                ('workshop_format', models.CharField(choices=[('standard', 'Standard two-day Carpentries workshop'), ('short', 'Short session (less than two days)'), ('periodic', 'Modules taught over a period of time (several weeks, one semester, etc.)'), ('', 'Other:')], max_length=20, verbose_name='What is the format of this workshop?')),
                ('workshop_format_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other workshop format')),
                ('workshop_types_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other workshop types')),
                ('workshop_types_other_explain', models.TextField(blank=True, help_text='For example "We are teaching Software Carpentry\'s Git lesson only" or "We are teaching Data Carpentry\'s Ecology workshop, but not teaching a programming language."', verbose_name='If you selected "Other", please provide more information here')),
                ('public_event', models.CharField(choices=[('public', 'Yes, this workshop is open to the public'), ('closed', 'No, this is a closed event'), ('', 'Other:')], help_text='Many of our workshops restrict registration to learners from the hosting institution. If your workshop will be open to registrants outside of your institution please let us know below.', max_length=20, verbose_name='Is this workshop open to the public?')),
                ('public_event_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other (workshop open to the public)')),
                ('additional_contact', models.CharField(blank=True, default='', max_length=255, verbose_name='Is there anyone you would like included on communication for this workshop? Please provide contact name(s) and e-mail(s) address')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event', models.OneToOneField(blank=True, help_text='Link to the event instance created or otherwise related to this object.', null=True, on_delete=django.db.models.deletion.PROTECT, to='workshops.Event', verbose_name='Linked event object')),
                ('institution', models.ForeignKey(blank=True, help_text="If your institution isn't on the list, enter its name in the field below.", null=True, on_delete=django.db.models.deletion.PROTECT, to='workshops.Organization', verbose_name='Institutional affiliation')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workshops.Language', verbose_name='What language is this workshop being conducted in?')),
                ('workshop_types', models.ManyToManyField(help_text='If you will be teaching The Carpentry Workshop as suggested in the curriculum without deviation, please select the appropriate curriculum. If you will not be teaching ALL parts of one Carpentry Curriculum please select "Other" and list which sections will be taught. For example: Unix Shell & Open Refine; Python only, etc.', limit_choices_to={'active': True}, to='workshops.Curriculum', verbose_name='Which Carpentry workshop is being taught?')),
            ],
            options={
                'abstract': False,
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkshopInquiryRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('data_privacy_agreement', models.BooleanField(default=False, verbose_name='I have read and agree to <a href="https://docs.carpentries.org/topic_folders/policies/privacy.html", target="_blank">the data privacy policy</a> of The Carpentries.')),
                ('code_of_conduct_agreement', models.BooleanField(default=False, verbose_name='I agree to abide by The Carpentries\' <a target="_blank"href="https://docs.carpentries.org/topic_folders/policies/code-of-conduct.html">Code of Conduct</a>.')),
                ('host_responsibilities', models.BooleanField(default=False, verbose_name='I understand <a href="https://docs.carpentries.org/topic_folders/hosts_instructors/hosts_instructors_checklist.html#host-checklist">the responsibilities of the workshop host</a>,including recruiting local helpers to support the workshop (1 helper for every 8-10 learners).')),
                ('state', models.CharField(choices=[('p', 'Pending'), ('d', 'Discarded'), ('a', 'Accepted')], default='p', max_length=1)),
                ('personal', models.CharField(max_length=255, verbose_name='Personal (given) name')),
                ('family', models.CharField(blank=True, default='', max_length=255, verbose_name='Family name (surname)')),
                ('email', models.EmailField(max_length=254, verbose_name='Email address')),
                ('institution_other_name', models.CharField(blank=True, default='', max_length=255, verbose_name='If your institutional affiliation is not listed, please enter the name')),
                ('institution_other_URL', models.URLField(blank=True, default='', help_text='Please provide URL.', max_length=255, verbose_name='If your institutional affiliation is not listed, please enter the website')),
                ('institution_department', models.CharField(blank=True, default='', max_length=255, verbose_name='Department/school affiliation (if applicable)')),
                ('location', models.CharField(default='', help_text='City, state, or province.', max_length=255, verbose_name='Workshop location')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Country')),
                ('routine_data_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other kinds of routinely worked-with data')),
                ('domains_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other domains')),
                ('preferred_dates', models.DateField(blank=True, help_text='Our workshops typically run two full days. Please select your preferred first day for the workshop. If you do not have exact dates or are interested in an alternative schedule, please indicate so below. Because we need to coordinate with instructors, a minimum of 2-3 months lead time is required for workshop planning.', verbose_name='Preferred dates')),
                ('other_preferred_dates', models.CharField(blank=True, default='', max_length=200, verbose_name='If your dates are not set, please provide more information below')),
                ('number_attendees', models.CharField(choices=[('10-40', '10-40 (one room, two instructors)'), ('40-80', '40-80 (two rooms, four instructors)'), ('80-120', '80-120 (three rooms, six instructors)')], default='10-40', help_text="This number doesn't need to be precise, but will help us decide how many instructors your workshop will need. Each workshop must have at least two instructors.", max_length=15, verbose_name='Anticipated number of attendees')),
                ('audience_description', models.TextField(verbose_name='Please describe your anticipated audience, including their experience, background, and goals')),
                ('administrative_fee', models.CharField(choices=[('nonprofit', 'I am with a government site, university, or other nonprofit. I understand the workshop fee of US$2500, and agree to follow through on The Carpentries invoicing process.'), ('forprofit', 'I am with a corporate or for-profit site. I understand The Carpentries staff will contact me about workshop fees. I will follow through on The Carpentries invoicing process for the agreed upon fee.'), ('member', 'I am with a Member Organisation so the workshop fee does not apply (Instructor travel costs will still apply).'), ('waiver', 'I am requesting a scholarship for the workshop fee (Instructor travel costs will still apply).')], default='nonprofit', max_length=20, verbose_name='Which of the following applies to your payment for the administrative fee?')),
                ('travel_expences_management', models.CharField(choices=[('booked', 'Hotel and airfare will be booked by site; ground travel and meals/incidentals will be reimbursed within 60 days.'), ('reimbursed', 'All expenses will be booked by instructors and reimbursed within 60 days.'), ('', 'Other:')], max_length=20, verbose_name='How will you manage travel expenses for Carpentries Instructors?')),
                ('travel_expences_management_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other travel expences management')),
                ('public_event', models.CharField(choices=[('public', 'Yes, this workshop is open to the public'), ('closed', 'No, this is a closed event'), ('', 'Other:')], help_text='Many of our workshops restrict registration to learners from the hosting institution. If your workshop will be open to registrants outside of your institution please let us know below.', max_length=20, verbose_name='Is this workshop open to the public?')),
                ('public_event_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other (workshop open to the public)')),
                ('institution_restrictions', models.CharField(choices=[('no_restrictions', 'No restrictions'), ('', 'Other:')], max_length=20, verbose_name='Our instructors live, teach, and travel globally. We understand that institutions may have citizenship or other requirements for employees or volunteers who facilitate workshops. If your institution fits this description, please share your requirements or note that there are no restrictions.')),
                ('institution_restrictions_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other (institution restrictions)')),
                ('additional_contact', models.CharField(blank=True, default='', max_length=255, verbose_name='Is there anyone you would like included on communication for this workshop? Please provide contact name(s) and e-mail(s) address')),
                ('carpentries_info_source_other', models.CharField(blank=True, default='', max_length=255, verbose_name='Other source for information about The Carpentries')),
                ('user_notes', models.TextField(blank=True, verbose_name='Is there any other information you would like to share with us?')),
                ('academic_levels', models.ManyToManyField(help_text='If you know the academic level(s) of your attendees, indicate them here.', to='workshops.AcademicLevel', verbose_name="Attendees' academic level / career stage")),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('carpentries_info_source', models.ManyToManyField(blank=True, to='workshops.InfoSource', verbose_name='How did you hear about The Carpentries?')),
                ('computing_levels', models.ManyToManyField(help_text="Indicate the attendees' level of computing experience, if known. We will ask attendees to fill in a skills survey before the workshop, so this answer can be an approximation.", to='workshops.ComputingExperienceLevel', verbose_name="Attendees' level of computing experience")),
                ('domains', models.ManyToManyField(help_text="The attendees' academic field(s) of study, if known.", to='workshops.KnowledgeDomain', verbose_name='Domains or topic of interest for target audience')),
                ('event', models.OneToOneField(blank=True, help_text='Link to the event instance created or otherwise related to this object.', null=True, on_delete=django.db.models.deletion.PROTECT, to='workshops.Event', verbose_name='Linked event object')),
                ('institution', models.ForeignKey(blank=True, help_text="If your institution isn't on the list, enter its name in the field below.", null=True, on_delete=django.db.models.deletion.PROTECT, to='workshops.Organization', verbose_name='Institutional affiliation')),
                ('language', models.ForeignKey(help_text='Our workshops are offered primarily in English, with a few of our lessons available in Spanish. While materials are mainly in English, we know it can be valuable to have an instructor who speaks the native language of the learners. We will attempt to locate Instructors speaking a particular language, but cannot guarantee the availability of non-English speaking Instructors.', on_delete=django.db.models.deletion.PROTECT, to='workshops.Language', verbose_name='What language will this workshop be conducted in?')),
                ('requested_workshop_types', models.ManyToManyField(help_text='If your learners are new to programming and primarily interested in working with data, Data Carpentry is likely the best choice. If your learners are interested in learning more about programming, including version control and automation, Software Carpentry is likely the best match. If your learners are people working in library and information related roles interested in learning data and software skills, Library Carpentry is the best choice. Please visit the <a href="https://software-carpentry.org/lessons/">Software Carpentry lessons page</a>, <a href="http://www.datacarpentry.org/lessons/">Data Carpentry lessons page</a>, or the <a href="https://librarycarpentry.org/lessons/">Library Carpentry lessons page</a> for more information about any of our lessons. If you’re not sure and would like to discuss with us, please select the "Don\'t know yet" option below.', limit_choices_to={'active': True}, to='workshops.Curriculum', verbose_name='Which Carpentry workshop are you requesting?')),
                ('routine_data', models.ManyToManyField(to='extrequests.DataVariant', verbose_name='What kinds of data does your target audience routinely work with?')),
            ],
            options={
                'abstract': False,
                'ordering': ['created_at'],
            },
        ),
        migrations.RunPython(add_data_variants),
    ]

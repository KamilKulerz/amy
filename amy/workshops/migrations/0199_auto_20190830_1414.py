# Generated by Django 2.1.7 on 2019-08-30 14:14

from django.db import migrations, models


def add_new_curricula(apps, schema_editor):
    Curriculum = apps.get_model('workshops', 'Curriculum')
    Curriculum.objects.create(
        carpentry='SWC',
        slug='swc-plotting',
        name='Software Carpentry (Plotting and Programming in Python)',
        description="Software Carpentry (Plotting and Programming in Python)",
    )
    Curriculum.objects.create(
        carpentry='SWC',
        slug='swc-reproducible-science',
        name='Software Carpentry (R for Reproducible Scientific Analysis)',
        description="Software Carpentry (R for Reproducible Scientific Analysis)",
    )


def add_curricula_descriptions(apps, schema_editor):
    Curriculum = apps.get_model('workshops', 'Curriculum')
    ECOLOGY = (
        "Our most general purpose workshop. Covers data organization, "
        "cleaning, analysis, and plotting (with R or Python). Intended for "
        "anyone working with tabular data (data with rows and columns)."
    )
    SOCIAL_SCIENCES = (
        "Covers data organization, cleaning, analysis, and plotting. Intended "
        "for people working with restricted-response interview or survey data."
    )
    GEOSPATIAL = (
        "Focuses on using specialized geospatial R packages. Includes short "
        "introduction to geospatial concepts and basic R. Does not cover data "
        "organization or cleaning. For a more general workshop covering those "
        "topics, see our Ecology and Social Sciences curricula."
    )
    GENOMICS = (
        "Focuses on core principles for efficient and reproducible research "
        "with sequencing data. Learners will learn to write custom Bash "
        "scripts to automate an analysis pipeline and will be introduced to "
        "commonly used bioinformatics tools and file formats. Taught using "
        "Amazon Web Services."
    )
    SWC_PYTHON = (
        "Our more advanced Python lesson. Covers core data structures, "
        "conditionals and loops, writing custom functions, and running "
        "programs from the command line. For audiences with no programming "
        "experience, see our Plotting and Programming in Python lesson. All "
        "SWC workshops include Bash shell scripting and version control with "
        "Git."
    )
    SWC_PLOTTING = (
        "Our more introductory Python lesson. Covers tabular data and other "
        "core data structures, conditionals and loops, writing custom "
        "functions, and building custom plots. Includes introduction to "
        "JupyterLab and strategies for getting help. All SWC workshops "
        "include Bash shell scripting and version control with Git."
    )
    SWC_R = (
        "Our more advanced R lesson. Covers core data structures, using "
        "conditionals and loops, writing custom functions, and running "
        "programs from the command line. For audiences with no programming "
        "experience, see our R for Reproducible Scientific Analysis lesson. "
        "All SWC workshops include Bash shell scripting and version control "
        "with Git."
    )
    SWC_REPRODUCIBLE = (
        "Our more introductory R lesson. Covers tabular data and other core "
        "data structures, using conditionals and loops, writing custom "
        "functions, and creating publication-quality graphics. Includes "
        "introduction to to RStudio and strategies for getting help. All SWC "
        "workshops include Bash shell scripting and version control with Git."
    )
    LC = (
        "Intended for people working in libraries and the information "
        "sciences. Introduces terminology used in software development and "
        "data science. Covers introduction to the Bash shell, data cleaning, "
        "and working collaboratively via Git/GitHub."
    )
    data = {
        'dc-ecology-python': ECOLOGY,
        'dc-ecology-r': ECOLOGY,
        'dc-genomics': GENOMICS,
        'dc-geospatial': GEOSPATIAL,
        'dc-socsci-python': SOCIAL_SCIENCES,
        'dc-sosci-r': SOCIAL_SCIENCES,
        'lc': LC,
        'swc-python': SWC_PYTHON,
        'swc-r': SWC_R,
        'swc-plotting': SWC_PLOTTING,
        'swc-reproducible-science': SWC_REPRODUCIBLE,
    }
    for slug, description in data.items():
        Curriculum.objects.filter(slug=slug).update(description=description)


class Migration(migrations.Migration):

    dependencies = [
        ('workshops', '0198_add_circuits_tag'),
    ]

    operations = [
        migrations.AlterField(
            model_name='curriculum',
            name='description',
            field=models.TextField(blank=True, default='', help_text='You can enter Markdown. It will be shown as a hover or popup over the curriculum entry on forms.', max_length=400, verbose_name='Curriculum longer description'),
        ),
        migrations.RunPython(add_new_curricula),
        migrations.RunPython(add_curricula_descriptions),
    ]
